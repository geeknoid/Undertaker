{
  "Assemblies": [
    {
      "Assembly": "TestLibrary",
      "Types": [
        {
          "Symbol": "TestLibrary.DeadDelegate",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.DeadEnum",
          "Dependents": [],
          "Root": false
        }
      ],
      "Members": [
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.AliveComplexProperty",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.AliveConst",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.AliveEvent",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.AliveField",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.AliveMethod()",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.AliveSimpleProperty",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.Item",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers._value",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.get_AliveComplexProperty()",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.get_AliveSimpleProperty()",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.get_Item(System.Int32)",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassAndAliveMembers.remove_AliveEvent(System.EventHandler)",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadComplexProperty",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadComplexProperty",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadConst",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadEvent",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadEvent",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadField",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadField",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadMethod()",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadMethod()",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadSimpleProperty",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.DeadSimpleProperty",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.Item",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.Item",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers._value",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers._value",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.add_DeadEvent(System.EventHandler)",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.get_DeadComplexProperty()",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.get_DeadSimpleProperty()",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.get_Item(System.Int32)",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.remove_DeadEvent(System.EventHandler)",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.set_DeadComplexProperty(System.Int32)",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.set_DeadSimpleProperty(System.Int32)",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveClassButDeadMembers.set_Item(System.Int32, System.Int32)",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveDelegate..ctor(System.Object, nint)",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveDelegate.Invoke()",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveDelegate.Invoke()",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveEnum.Blue",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveEnum.Green",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveEnum.Red",
          "Dependents": [],
          "Root": false
        },
        {
          "Symbol": "TestLibrary.AliveEnum.value__",
          "Dependents": [],
          "Root": false
        }
      ]
    }
  ]
}